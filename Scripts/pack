#!/bin/bash -e
echo $0
source "$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)/consts"

${SCRIPTS}/update
${SCRIPTS}/test
${SCRIPTS}/docs

# collect
COLLECTED_DIR="${BUILD_SRC}/files"
mkdir $COLLECTED_DIR "$COLLECTED_DIR/Migration" "$COLLECTED_DIR/Images"
cp -v "${ROOT}/README.md" "$COLLECTED_DIR/README.md"
cp -v "${ROOT}/RELEASE_NOTES.md" "$COLLECTED_DIR/RELEASE_NOTES.md"
cp -v "${ROOT}/EntitasUpgradeGuide.md" "$COLLECTED_DIR/EntitasUpgradeGuide.md"
cp -v "${ROOT}/LICENSE.txt" "$COLLECTED_DIR/LICENSE.txt"
cp "${BUILD_SRC}/${ES_MIG_CLI}.exe" "$COLLECTED_DIR/Migration/MigrationAssistant.exe"
cp "${BUILD_SRC}/${ES_MIG}.dll" "$COLLECTED_DIR/Migration/${ES_MIG}.dll"
cp "${BUILD_SRC}/${ES_UTILS}.dll" "$COLLECTED_DIR/Migration/${ES_UTILS}.dll"

cp "${ADDONS}/${ES_UE}/${ES_UE}/Editor/Images/"* "$COLLECTED_DIR/Images"
cp "${ADDONS}/${ES_VD_UE}/${ES_VD_UE}/Editor/Images/"* "$COLLECTED_DIR/Images"
cp "${ADDONS}/${ES_CG_G_CLI}/startCodeGenerator" "$COLLECTED_DIR/startCodeGenerator"
cp "${ADDONS}/${ES_CG_G_CLI}/StartCodeGenerator.bat" "$COLLECTED_DIR/StartCodeGenerator.bat"


TMP_DIR="${BUILD}/tmp"
TMP_ENTITAS="${TMP_DIR}/Entitas"
TMP_CG="${TMP_DIR}/CodeGenerator"
CG_PLUGINS="${TMP_CG}/Plugins"
CG_DEFAULT="${CG_PLUGINS}/Entitas"

# create c# zip ------------------------------------------------------------
mkdir $TMP_DIR $TMP_ENTITAS $TMP_CG $CG_PLUGINS $CG_DEFAULT

cp "${BUILD_SRC}/${ES}.dll" $TMP_ENTITAS
cp "${BUILD_SRC}/${ES_UTILS}.dll" $TMP_ENTITAS

cp "${BUILD_SRC}/${ES_CG_ATTR}.dll" $TMP_ENTITAS

cp "${BUILD_SRC}/${ES_BP}.dll" $TMP_ENTITAS

cp "${COLLECTED_DIR}/"* $TMP_DIR || true
cp -r "$COLLECTED_DIR/Migration" $TMP_DIR

cp "${BUILD_SRC}/${ES_CG_G_CLI}.exe" "$TMP_CG/Entitas.exe"
cp "${BUILD_SRC}/${ES_CG_G}.dll" $TMP_CG
cp "${BUILD_SRC}/${ES_CG}.dll" $TMP_CG
cp "${BUILD_SRC}/${ES}.dll" $TMP_CG
cp "${BUILD_SRC}/${ES_UTILS}.dll" $TMP_CG
cp "${BUILD_SRC}/fabl.dll" $TMP_CG
cp "${BUILD_SRC}/fabl.Appenders.dll" $TMP_CG

cp "${BUILD_SRC}/${ES_CG_ATTR}.dll" $CG_DEFAULT
cp "${BUILD_SRC}/${ES_CG_G}.dll" $CG_DEFAULT
cp "${BUILD_SRC}/${ES_CG}.dll" $CG_DEFAULT
cp "${BUILD_SRC}/${ES_CG_P}.dll" $CG_DEFAULT
cp "${BUILD_SRC}/${ES}.dll" $CG_DEFAULT
cp "${BUILD_SRC}/${ES_UTILS}.dll" $CG_DEFAULT
cp "${BUILD_SRC}/fabl.dll" $CG_DEFAULT

cp -r $DOCS "${TMP_DIR}/Documentation"
pushd $TMP_DIR > /dev/null
  zip -rq "${BUILD_DEPLOY}/${PROJECT_NAME}-CSharp.zip" ./
popd > /dev/null
rm -rf $TMP_DIR
# --------------------------------------------------------------------------

# create unity zip ---------------------------------------------------------
TMP_EDITOR="${TMP_ENTITAS}/Editor"
mkdir $TMP_DIR $TMP_ENTITAS $TMP_EDITOR $TMP_CG $CG_PLUGINS $CG_DEFAULT

cp "${BUILD_SRC}/${ES}.dll" $TMP_ENTITAS
cp "${BUILD_SRC}/${ES_UTILS}.dll" $TMP_ENTITAS

cp "${BUILD_SRC}/${ES_U}.dll" $TMP_ENTITAS
cp "${BUILD_SRC}/${ES_UE}.dll" $TMP_EDITOR

cp "${BUILD_SRC}/${ES_CG}.dll" $TMP_EDITOR
cp "${BUILD_SRC}/${ES_CG_ATTR}.dll" $TMP_ENTITAS
cp "${BUILD_SRC}/${ES_CG_G}.dll" $TMP_EDITOR
cp "${BUILD_SRC}/${ES_CG_P}.dll" $TMP_EDITOR
cp "${BUILD_SRC}/${ES_CG_UE}.dll" $TMP_EDITOR
cp "${BUILD_SRC}/Compile.cs" $TMP_ENTITAS

cp "${BUILD_SRC}/${ES_MIG}.dll" $TMP_EDITOR
cp "${BUILD_SRC}/${ES_MIG_UE}.dll" $TMP_EDITOR

cp "${BUILD_SRC}/${ES_VD_CG_P}.dll" $TMP_EDITOR
cp "${BUILD_SRC}/${ES_VD_U}.dll" $TMP_ENTITAS
cp "${BUILD_SRC}/${ES_VD_UE}.dll" $TMP_EDITOR

cp "${BUILD_SRC}/${ES_BP}.dll" $TMP_ENTITAS
# cp "${BUILD_SRC}/${ES_BP_CG_P}.dll" $TMP_EDITOR
# cp "${BUILD_SRC}/${ES_BP_U}.dll" $TMP_ENTITAS
# cp "${BUILD_SRC}/${ES_BP_UE}.dll" $TMP_EDITOR

cp "${BUILD_SRC}/fabl.dll" $TMP_ENTITAS
cp "${BUILD_SRC}/fabl.Appenders.dll" $TMP_ENTITAS

cp "${BUILD_SRC}/${ES_CG_G_CLI}.exe" "$TMP_CG/Entitas.exe"
cp "${BUILD_SRC}/${ES_CG_G}.dll" $TMP_CG
cp "${BUILD_SRC}/${ES_CG}.dll" $TMP_CG
cp "${BUILD_SRC}/${ES}.dll" $TMP_CG
cp "${BUILD_SRC}/${ES_UTILS}.dll" $TMP_CG
cp "${BUILD_SRC}/fabl.dll" $TMP_CG
cp "${BUILD_SRC}/fabl.Appenders.dll" $TMP_CG

cp "${BUILD_SRC}/${ES_CG_ATTR}.dll" $CG_DEFAULT
cp "${BUILD_SRC}/${ES_CG_G}.dll" $CG_DEFAULT
cp "${BUILD_SRC}/${ES_CG}.dll" $CG_DEFAULT
cp "${BUILD_SRC}/${ES_CG_P}.dll" $CG_DEFAULT
cp "${BUILD_SRC}/${ES}.dll" $CG_DEFAULT
cp "${BUILD_SRC}/${ES_UTILS}.dll" $CG_DEFAULT
cp "${BUILD_SRC}/${ES_VD_CG_P}.dll" $CG_DEFAULT
cp "${BUILD_SRC}/fabl.dll" $CG_DEFAULT

# cp "${BUILD_SRC}/${ES_BP_CG_P}.dll" $CG_DEFAULT
# cp "${BUILD_SRC}/${ES_BP}.dll" $CG_DEFAULT
# cp "${BUILD_SRC}/${ES_BP_U}.dll" $CG_DEFAULT
# cp "${BUILD_SRC}/${ES_BP_UE}.dll" $CG_DEFAULT
# cp "${BUILD_SRC}/${ES_UE}.dll" $CG_DEFAULT
# cp "${BUILD_SRC}/${ES_VD_U}.dll" $CG_DEFAULT
# cp "${BUILD_SRC}/${ES_VD_UE}.dll" $CG_DEFAULT

cp "${COLLECTED_DIR}/"* $TMP_DIR || true
cp -r "$COLLECTED_DIR/Migration" $TMP_DIR
cp -r "$COLLECTED_DIR/Images" $TMP_EDITOR

cp -r $DOCS "${TMP_DIR}/Documentation"
pushd $TMP_DIR > /dev/null
  zip -rq "${BUILD_DEPLOY}/${PROJECT_NAME}-Unity.zip" ./
popd > /dev/null
rm -rf $TMP_DIR
# --------------------------------------------------------------------------

# create docset tgz
pushd "${BUILD_DOCS}/docset" > /dev/null
tar --exclude='.DS_Store' -czf "${BUILD_DEPLOY}/${PROJECT_NAME}.docset.tgz" $PROJECT_NAME.docset
popd > /dev/null

# generate tree file

# ensure tree is installed
command -v tree >/dev/null 2>&1 || {
    echo >&2 "Error: tree not found! tree is required to generate tree.txt. Try \"brew install tree\".";
    exit 1;
}

TREE_IGNORE="bin|obj|Library|Libraries|*Tests|Readme|ProjectSettings|Build|docs|Temp|Examples|*.csproj|*.meta|*.sln|*.userprefs|*.properties"
pushd $ROOT > /dev/null
  tree -I $TREE_IGNORE --noreport -d > tree.txt
  tree -I $TREE_IGNORE --noreport --dirsfirst >> tree.txt
  cat tree.txt
popd > /dev/null
